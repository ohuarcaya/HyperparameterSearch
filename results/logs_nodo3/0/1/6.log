/usr/lib/python3.4/site-packages/deap/tools/_hypervolume/pyhv.py:33: ImportWarning: Falling back to the python version of hypervolume module. Expect this to be very slow.
  "module. Expect this to be very slow.", ImportWarning)
Exception in thread Thread-1:
Traceback (most recent call last):
  File "/usr/lib64/python3.4/threading.py", line 911, in _bootstrap_inner
    self.run()
  File "/usr/lib64/python3.4/threading.py", line 859, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib64/python3.4/multiprocessing/pool.py", line 366, in _handle_workers
    pool._maintain_pool()
  File "/usr/lib64/python3.4/multiprocessing/pool.py", line 240, in _maintain_pool
    self._repopulate_pool()
  File "/usr/lib64/python3.4/multiprocessing/pool.py", line 233, in _repopulate_pool
    w.start()
  File "/usr/lib64/python3.4/multiprocessing/process.py", line 105, in start
    self._popen = self._Popen(self)
  File "/usr/lib64/python3.4/multiprocessing/context.py", line 267, in _Popen
    return Popen(process_obj)
  File "/usr/lib64/python3.4/multiprocessing/popen_fork.py", line 21, in __init__
    self._launch(process_obj)
  File "/usr/lib64/python3.4/multiprocessing/popen_fork.py", line 70, in _launch
    self.pid = os.fork()
OSError: [Errno 12] Cannot allocate memory

multiprocessing.pool.RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/_parallel_backends.py", line 344, in __call__
    return self.func(*args, **kwargs)
  File "/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/parallel.py", line 131, in __call__
    return [func(*args, **kwargs) for func, args, kwargs in self.items]
  File "/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/parallel.py", line 131, in <listcomp>
    return [func(*args, **kwargs) for func, args, kwargs in self.items]
  File "/usr/lib64/python3.4/site-packages/sklearn/model_selection/_validation.py", line 238, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/usr/lib64/python3.4/site-packages/sklearn/neighbors/base.py", line 786, in fit
    return self._fit(X)
  File "/usr/lib64/python3.4/site-packages/sklearn/neighbors/base.py", line 244, in _fit
    **self.effective_metric_params_)
  File "sklearn/neighbors/binary_tree.pxi", line 1054, in sklearn.neighbors.kd_tree.BinaryTree.__init__ (sklearn/neighbors/kd_tree.c:9133)
  File "/usr/lib64/python3.4/site-packages/numpy/core/numeric.py", line 501, in asarray
    return array(a, dtype, copy=False, order=order)
MemoryError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.4/multiprocessing/pool.py", line 119, in worker
    result = (True, func(*args, **kwds))
  File "/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/_parallel_backends.py", line 353, in __call__
    raise TransportableException(text, e_type)
sklearn.externals.joblib.my_exceptions.TransportableException: TransportableException
___________________________________________________________________________
MemoryError                                        Mon Nov 19 08:10:08 2018
PID: 18927                                   Python 3.4.5: /usr/bin/python3
...........................................................................
/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/parallel.py in __call__(self=<sklearn.externals.joblib.parallel.BatchedCalls object>)
    126     def __init__(self, iterator_slice):
    127         self.items = list(iterator_slice)
    128         self._size = len(self.items)
    129 
    130     def __call__(self):
--> 131         return [func(*args, **kwargs) for func, args, kwargs in self.items]
        self.items = [(<function _fit_and_score>, (KNeighborsClassifier(algorithm='kd_tree', leaf_s...n_neighbors=5, p=3,
           weights='uniform'),        WAP001  WAP002  WAP003  WAP004  WAP005   ...01             503  

[16270 rows x 1041 columns], 6775     2
7566     0
17990    2
1180     2
1050...  2
Name: BUILDINGID, Length: 16270, dtype: int64, make_scorer(accuracy_score), array([ 1627,  1628,  1629, ..., 16267, 16268, 16269]), array([   0,    1,    2, ..., 1624, 1625, 1626]), 0, {'algorithm': 'kd_tree', 'leaf_size': 70, 'n_neighbors': 5, 'p': 3, 'weights': 'uniform'}), {'error_score': 'raise', 'fit_params': {}, 'return_n_test_samples': True, 'return_parameters': True, 'return_times': True, 'return_train_score': False})]
    132 
    133     def __len__(self):
    134         return self._size
    135 

...........................................................................
/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/parallel.py in <listcomp>(.0=<list_iterator object>)
    126     def __init__(self, iterator_slice):
    127         self.items = list(iterator_slice)
    128         self._size = len(self.items)
    129 
    130     def __call__(self):
--> 131         return [func(*args, **kwargs) for func, args, kwargs in self.items]
        func = <function _fit_and_score>
        args = (KNeighborsClassifier(algorithm='kd_tree', leaf_s...n_neighbors=5, p=3,
           weights='uniform'),        WAP001  WAP002  WAP003  WAP004  WAP005   ...01             503  

[16270 rows x 1041 columns], 6775     2
7566     0
17990    2
1180     2
1050...  2
Name: BUILDINGID, Length: 16270, dtype: int64, make_scorer(accuracy_score), array([ 1627,  1628,  1629, ..., 16267, 16268, 16269]), array([   0,    1,    2, ..., 1624, 1625, 1626]), 0, {'algorithm': 'kd_tree', 'leaf_size': 70, 'n_neighbors': 5, 'p': 3, 'weights': 'uniform'})
        kwargs = {'error_score': 'raise', 'fit_params': {}, 'return_n_test_samples': True, 'return_parameters': True, 'return_times': True, 'return_train_score': False}
    132 
    133     def __len__(self):
    134         return self._size
    135 

...........................................................................
/usr/lib64/python3.4/site-packages/sklearn/model_selection/_validation.py in _fit_and_score(estimator=KNeighborsClassifier(algorithm='kd_tree', leaf_s...n_neighbors=5, p=3,
           weights='uniform'), X=       WAP001  WAP002  WAP003  WAP004  WAP005   ...01             503  

[16270 rows x 1041 columns], y=6775     2
7566     0
17990    2
1180     2
1050...  2
Name: BUILDINGID, Length: 16270, dtype: int64, scorer=make_scorer(accuracy_score), train=array([ 1627,  1628,  1629, ..., 16267, 16268, 16269]), test=array([   0,    1,    2, ..., 1624, 1625, 1626]), verbose=0, parameters={'algorithm': 'kd_tree', 'leaf_size': 70, 'n_neighbors': 5, 'p': 3, 'weights': 'uniform'}, fit_params={}, return_train_score=False, return_parameters=True, return_n_test_samples=True, return_times=True, error_score='raise')
    233 
    234     try:
    235         if y_train is None:
    236             estimator.fit(X_train, **fit_params)
    237         else:
--> 238             estimator.fit(X_train, y_train, **fit_params)
        estimator.fit = <bound method KNeighborsClassifier.fit of KNeigh..._neighbors=5, p=3,
           weights='uniform')>
        X_train =        WAP001  WAP002  WAP003  WAP004  WAP005   ...01             503  

[14643 rows x 1041 columns]
        y_train = 11757    2
289      2
1946     2
15119    0
1136...  2
Name: BUILDINGID, Length: 14643, dtype: int64
        fit_params = {}
    239 
    240     except Exception as e:
    241         # Note fit time as time until error
    242         fit_time = time.time() - start_time

...........................................................................
/usr/lib64/python3.4/site-packages/sklearn/neighbors/base.py in fit(self=KNeighborsClassifier(algorithm='kd_tree', leaf_s...n_neighbors=5, p=3,
           weights='uniform'), X=array([[  0.,   0.,   0., ...,   1.,   1., 501.]...      [  0.,   0.,   0., ...,   1.,   1., 503.]]), y=array([[2],
       [2],
       [2],
       ...,
       [2],
       [0],
       [2]]))
    781 
    782         if not self.outputs_2d_:
    783             self.classes_ = self.classes_[0]
    784             self._y = self._y.ravel()
    785 
--> 786         return self._fit(X)
        self._fit = <bound method KNeighborsClassifier._fit of KNeig..._neighbors=5, p=3,
           weights='uniform')>
        X = array([[  0.,   0.,   0., ...,   1.,   1., 501.]...      [  0.,   0.,   0., ...,   1.,   1., 503.]])
    787 
    788 
    789 class UnsupervisedMixin(object):
    790     def fit(self, X, y=None):

...........................................................................
/usr/lib64/python3.4/site-packages/sklearn/neighbors/base.py in _fit(self=KNeighborsClassifier(algorithm='kd_tree', leaf_s...n_neighbors=5, p=3,
           weights='uniform'), X=array([[  0.,   0.,   0., ...,   1.,   1., 501.]...      [  0.,   0.,   0., ...,   1.,   1., 503.]]))
    239                                   metric=self.effective_metric_,
    240                                   **self.effective_metric_params_)
    241         elif self._fit_method == 'kd_tree':
    242             self._tree = KDTree(X, self.leaf_size,
    243                                 metric=self.effective_metric_,
--> 244                                 **self.effective_metric_params_)
        self.effective_metric_params_ = {'p': 3}
    245         elif self._fit_method == 'brute':
    246             self._tree = None
    247         else:
    248             raise ValueError("algorithm = '%s' not recognized"

...........................................................................
/usr/lib64/python3.4/site-packages/sklearn/neighbors/kd_tree.cpython-34m.so in sklearn.neighbors.kd_tree.BinaryTree.__init__ (sklearn/neighbors/kd_tree.c:9133)()
   1049 
   1050 
   1051 
   1052 
   1053 
-> 1054 
   1055 
   1056 
   1057 
   1058 

...........................................................................
/usr/lib64/python3.4/site-packages/numpy/core/numeric.py in asarray(a=array([[  0.,   0.,   0., ...,   1.,   1., 501.]...      [  0.,   0.,   0., ...,   1.,   1., 503.]]), dtype=<class 'numpy.float64'>, order='C')
    496     False
    497     >>> np.asanyarray(a) is a
    498     True
    499 
    500     """
--> 501     return array(a, dtype, copy=False, order=order)
        a = array([[  0.,   0.,   0., ...,   1.,   1., 501.]...      [  0.,   0.,   0., ...,   1.,   1., 503.]])
        dtype = <class 'numpy.float64'>
        order = 'C'
    502 
    503 
    504 def asanyarray(a, dtype=None, order=None):
    505     """Convert the input to an ndarray, but pass ndarray subclasses through.

MemoryError: 
___________________________________________________________________________
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/parallel.py", line 682, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/usr/lib64/python3.4/multiprocessing/pool.py", line 608, in get
    raise self._value
sklearn.externals.joblib.my_exceptions.TransportableException: TransportableException
___________________________________________________________________________
MemoryError                                        Mon Nov 19 08:10:08 2018
PID: 18927                                   Python 3.4.5: /usr/bin/python3
...........................................................................
/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/parallel.py in __call__(self=<sklearn.externals.joblib.parallel.BatchedCalls object>)
    126     def __init__(self, iterator_slice):
    127         self.items = list(iterator_slice)
    128         self._size = len(self.items)
    129 
    130     def __call__(self):
--> 131         return [func(*args, **kwargs) for func, args, kwargs in self.items]
        self.items = [(<function _fit_and_score>, (KNeighborsClassifier(algorithm='kd_tree', leaf_s...n_neighbors=5, p=3,
           weights='uniform'),        WAP001  WAP002  WAP003  WAP004  WAP005   ...01             503  

[16270 rows x 1041 columns], 6775     2
7566     0
17990    2
1180     2
1050...  2
Name: BUILDINGID, Length: 16270, dtype: int64, make_scorer(accuracy_score), array([ 1627,  1628,  1629, ..., 16267, 16268, 16269]), array([   0,    1,    2, ..., 1624, 1625, 1626]), 0, {'algorithm': 'kd_tree', 'leaf_size': 70, 'n_neighbors': 5, 'p': 3, 'weights': 'uniform'}), {'error_score': 'raise', 'fit_params': {}, 'return_n_test_samples': True, 'return_parameters': True, 'return_times': True, 'return_train_score': False})]
    132 
    133     def __len__(self):
    134         return self._size
    135 

...........................................................................
/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/parallel.py in <listcomp>(.0=<list_iterator object>)
    126     def __init__(self, iterator_slice):
    127         self.items = list(iterator_slice)
    128         self._size = len(self.items)
    129 
    130     def __call__(self):
--> 131         return [func(*args, **kwargs) for func, args, kwargs in self.items]
        func = <function _fit_and_score>
        args = (KNeighborsClassifier(algorithm='kd_tree', leaf_s...n_neighbors=5, p=3,
           weights='uniform'),        WAP001  WAP002  WAP003  WAP004  WAP005   ...01             503  

[16270 rows x 1041 columns], 6775     2
7566     0
17990    2
1180     2
1050...  2
Name: BUILDINGID, Length: 16270, dtype: int64, make_scorer(accuracy_score), array([ 1627,  1628,  1629, ..., 16267, 16268, 16269]), array([   0,    1,    2, ..., 1624, 1625, 1626]), 0, {'algorithm': 'kd_tree', 'leaf_size': 70, 'n_neighbors': 5, 'p': 3, 'weights': 'uniform'})
        kwargs = {'error_score': 'raise', 'fit_params': {}, 'return_n_test_samples': True, 'return_parameters': True, 'return_times': True, 'return_train_score': False}
    132 
    133     def __len__(self):
    134         return self._size
    135 

...........................................................................
/usr/lib64/python3.4/site-packages/sklearn/model_selection/_validation.py in _fit_and_score(estimator=KNeighborsClassifier(algorithm='kd_tree', leaf_s...n_neighbors=5, p=3,
           weights='uniform'), X=       WAP001  WAP002  WAP003  WAP004  WAP005   ...01             503  

[16270 rows x 1041 columns], y=6775     2
7566     0
17990    2
1180     2
1050...  2
Name: BUILDINGID, Length: 16270, dtype: int64, scorer=make_scorer(accuracy_score), train=array([ 1627,  1628,  1629, ..., 16267, 16268, 16269]), test=array([   0,    1,    2, ..., 1624, 1625, 1626]), verbose=0, parameters={'algorithm': 'kd_tree', 'leaf_size': 70, 'n_neighbors': 5, 'p': 3, 'weights': 'uniform'}, fit_params={}, return_train_score=False, return_parameters=True, return_n_test_samples=True, return_times=True, error_score='raise')
    233 
    234     try:
    235         if y_train is None:
    236             estimator.fit(X_train, **fit_params)
    237         else:
--> 238             estimator.fit(X_train, y_train, **fit_params)
        estimator.fit = <bound method KNeighborsClassifier.fit of KNeigh..._neighbors=5, p=3,
           weights='uniform')>
        X_train =        WAP001  WAP002  WAP003  WAP004  WAP005   ...01             503  

[14643 rows x 1041 columns]
        y_train = 11757    2
289      2
1946     2
15119    0
1136...  2
Name: BUILDINGID, Length: 14643, dtype: int64
        fit_params = {}
    239 
    240     except Exception as e:
    241         # Note fit time as time until error
    242         fit_time = time.time() - start_time

...........................................................................
/usr/lib64/python3.4/site-packages/sklearn/neighbors/base.py in fit(self=KNeighborsClassifier(algorithm='kd_tree', leaf_s...n_neighbors=5, p=3,
           weights='uniform'), X=array([[  0.,   0.,   0., ...,   1.,   1., 501.]...      [  0.,   0.,   0., ...,   1.,   1., 503.]]), y=array([[2],
       [2],
       [2],
       ...,
       [2],
       [0],
       [2]]))
    781 
    782         if not self.outputs_2d_:
    783             self.classes_ = self.classes_[0]
    784             self._y = self._y.ravel()
    785 
--> 786         return self._fit(X)
        self._fit = <bound method KNeighborsClassifier._fit of KNeig..._neighbors=5, p=3,
           weights='uniform')>
        X = array([[  0.,   0.,   0., ...,   1.,   1., 501.]...      [  0.,   0.,   0., ...,   1.,   1., 503.]])
    787 
    788 
    789 class UnsupervisedMixin(object):
    790     def fit(self, X, y=None):

...........................................................................
/usr/lib64/python3.4/site-packages/sklearn/neighbors/base.py in _fit(self=KNeighborsClassifier(algorithm='kd_tree', leaf_s...n_neighbors=5, p=3,
           weights='uniform'), X=array([[  0.,   0.,   0., ...,   1.,   1., 501.]...      [  0.,   0.,   0., ...,   1.,   1., 503.]]))
    239                                   metric=self.effective_metric_,
    240                                   **self.effective_metric_params_)
    241         elif self._fit_method == 'kd_tree':
    242             self._tree = KDTree(X, self.leaf_size,
    243                                 metric=self.effective_metric_,
--> 244                                 **self.effective_metric_params_)
        self.effective_metric_params_ = {'p': 3}
    245         elif self._fit_method == 'brute':
    246             self._tree = None
    247         else:
    248             raise ValueError("algorithm = '%s' not recognized"

...........................................................................
/usr/lib64/python3.4/site-packages/sklearn/neighbors/kd_tree.cpython-34m.so in sklearn.neighbors.kd_tree.BinaryTree.__init__ (sklearn/neighbors/kd_tree.c:9133)()
   1049 
   1050 
   1051 
   1052 
   1053 
-> 1054 
   1055 
   1056 
   1057 
   1058 

...........................................................................
/usr/lib64/python3.4/site-packages/numpy/core/numeric.py in asarray(a=array([[  0.,   0.,   0., ...,   1.,   1., 501.]...      [  0.,   0.,   0., ...,   1.,   1., 503.]]), dtype=<class 'numpy.float64'>, order='C')
    496     False
    497     >>> np.asanyarray(a) is a
    498     True
    499 
    500     """
--> 501     return array(a, dtype, copy=False, order=order)
        a = array([[  0.,   0.,   0., ...,   1.,   1., 501.]...      [  0.,   0.,   0., ...,   1.,   1., 503.]])
        dtype = <class 'numpy.float64'>
        order = 'C'
    502 
    503 
    504 def asanyarray(a, dtype=None, order=None):
    505     """Convert the input to an ndarray, but pass ndarray subclasses through.

MemoryError: 
___________________________________________________________________________

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/pool.py", line 606, in terminate
    super(MemmapingPool, self).terminate()
  File "/usr/lib64/python3.4/multiprocessing/pool.py", line 505, in terminate
    self._terminate()
  File "/usr/lib64/python3.4/multiprocessing/util.py", line 185, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/usr/lib64/python3.4/multiprocessing/pool.py", line 553, in _terminate_pool
    p.terminate()
  File "/usr/lib64/python3.4/multiprocessing/process.py", line 113, in terminate
    self._popen.terminate()
AttributeError: 'NoneType' object has no attribute 'terminate'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "main.py", line 58, in <module>
    ev.fit(scoring='accuracy', n_jobs=cpu_count(), kargs=searchParams)
  File "/home/Manuel.Castillo/pruebasOHC/lib/ProcessManager.py", line 62, in fit
    rscv.fit(self.X, self.y)
  File "/usr/lib64/python3.4/site-packages/sklearn/model_selection/_search.py", line 1190, in fit
    return self._fit(X, y, groups, sampled_params)
  File "/usr/lib64/python3.4/site-packages/sklearn/model_selection/_search.py", line 564, in _fit
    for parameters in parameter_iterable
  File "/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/parallel.py", line 768, in __call__
    self.retrieve()
  File "/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/parallel.py", line 718, in retrieve
    backend.abort_everything(ensure_ready=ensure_ready)
  File "/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/_parallel_backends.py", line 143, in abort_everything
    self.terminate()
  File "/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/_parallel_backends.py", line 317, in terminate
    super(MultiprocessingBackend, self).terminate()
  File "/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/_parallel_backends.py", line 134, in terminate
    self._pool.terminate()  # terminate does a join()
  File "/usr/lib64/python3.4/site-packages/sklearn/externals/joblib/pool.py", line 608, in terminate
    except WindowsError as e:
TypeError: catching classes that do not inherit from BaseException is not allowed
